{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,sBCAAC,EAAAD,EAAA,sDDOA,MAAME,EAAaC,SAASC,eAAe,UACrCC,EAAiBF,SAASC,eAAe,YACzCE,EAAcH,SAASC,eAAe,SACxBD,SAASC,eAAe,YACxBD,SAASC,eAAe,UAI5C,IAAIG,EACAC,EAAW,GACXC,EAAO,GAGXC,eAAeC,IAEX,MAAMC,QCpBVF,eAA2BG,GACvB,MAAMC,EAAgBb,EAAAc,WAAWF,EAAI,YAErC,IACI,MANRG,KAMgBA,SAAef,EAAAgB,QAAQH,GAS/B,OARiBE,EAAKE,KAAKC,IACvBC,QAAQC,IAAIF,GACL,IACAA,EAAIG,OACPC,GAAIJ,EAAII,OAKlB,MAAOC,GACLJ,QAAQC,IAAIG,IDKeC,CAAY1B,EAAAc,IAC3CX,EAAWwB,UAAY,GACvBd,EAAiBe,SAAQC,IACrBC,EAAcD,MAElBpB,EAAWI,EAIf,SAASiB,EAAcC,GAEnB,MAAMF,EAAUzB,SAAS4B,cAAc,KACvCH,EAAQI,UAAY,UAEpBJ,EAAQK,aAAa,OAAQ,qBAAqBH,EAAKP,MACvD,MAAMW,EAAaJ,EAAKK,IAAIC,OAASN,EAAKK,IAAI,GAAK,sGAG7CE,EADuB5B,EAAK6B,MAAMC,GAAgBA,EAAYhB,KAAOO,EAAKP,KAE5E,mEAAkE,0DAIrEK,EAAOF,UAAY,iEAcFQ,6EACKJ,EAAAU,0DAEHC,EAAAC,eAAAZ,EAAAa,UAAAb,EAAAc,gCAChBP,sBAMkBQ,YAAuBjB,SACzCkB,EAAkBlB,EAAYmB,cAAA,mBAE/BC,iBAAA,SAAAtC,MAAAc,IAENA,EAAAyB,iBAGDxC,EAASyC,KAAQpB,GACbW,EAAMU,iBAAmC1C,GACnCF,SAAW6C,EAAYC,mBAAMtD,EAAAc,GAAAN,EAAA+C,IAAA7C,GACnCqC,EAAAb,aAAA,YAAoC,GAEhCa,EAAgBS,UAAM,+BAMtBC,IAGJ,MAAIC,EAAapD,EACMqD,MAAmDC,EAAArD,EAAAoD,MAIF,IAAEE,EAAA,GAG1EA,EAAA,KAAAH,EAAoBjD,EAAMqD,QAAAjC,GAAAA,EAAAkC,WAAAL,IAEtBjD,EACD,QAAAmD,IAAAC,EAAAA,EAAAG,MAAA,CAAAC,EAAAC,IAAAA,EAAAtB,MAAAqB,EAAArB,SAGP,SAAAgB,IAAAC,EAAeA,EAA2BG,MAAK,CAAAC,EAAAC,IAAAD,EAAArB,MAAAsB,EAAAtB,SAE5CzC,EAAAwB,UAAA,GAEHkC,EAAAjC,SAAAC,IACIC,EAAWD,MAoFfvB,EAAA2C,iBAAA,UAAmBxB,IACfgC,SAGQR,iBAAS,UAAAxB","sources":["src/home.js","src/functions/allProducts.js"],"sourcesContent":["import { db, auth } from \"../src/functions/app\";\r\nimport { onAuthStateChanged, getAuth } from \"firebase/auth\";\r\nimport { getProducts } from \"../src/functions/allProducts\";\r\nimport { getFirebaseCart, createFirebaseCart } from \"../src/functions/cart\"\r\nimport { createFirebaseCart } from \"../src/functions/cart\"\r\nimport { addProductToCart, getMyLocalCart, currencyFormat } from \"../utils\"\r\n\r\nconst shopBakery = document.getElementById(\"bakery\");\r\nconst categoryFilter = document.getElementById(\"category\");\r\nconst orderFilter = document.getElementById(\"order\");\r\nconst veganFilter = document.getElementById(\"veganism\");\r\nconst sugarFilter = document.getElementById(\"sugars\");\r\n\r\n\r\n\r\nlet userLogged = undefined;\r\nlet products = [];\r\nlet cart = [];\r\n\r\n\r\nasync function loadProducts() {\r\n\r\n    const firebaseProducts = await getProducts(db);\r\n    shopBakery.innerHTML = \"\";\r\n    firebaseProducts.forEach(product => {\r\n        renderProduct(product);\r\n    });\r\n    products = firebaseProducts;\r\n}\r\n\r\n\r\nfunction renderProduct(item) {\r\n\r\n    const product = document.createElement(\"a\");\r\n    product.className = \"product\";\r\n\r\n    product.setAttribute(\"href\", `./product.html?id=${item.id}`);\r\n    const coverImage = item.img.length ? item.img[0] : \"https://cdn.dribbble.com/users/55871/screenshots/2158022/media/95f08ed3812af28b93fa534fb5d277b3.jpg\";\r\n\r\n    const isProductAddedToCart = cart.some((productCart) => productCart.id === item.id);\r\n    const productButtonCart = isProductAddedToCart ?\r\n        '<button class=\"product_cart\" disabled>Producto añadido</button >' :\r\n        '<button class=\"product_cart\">Añadir al carrito</button>';\r\n\r\n\r\n    product.innerHTML = `\r\n    \r\n        <div class=\"dessert\"> \r\n            <img src=\"${coverImage}\" alt=\"\" class=\"dessert__img\">\r\n            <h3 class=\"dessert__caption\">${item.name}</h3>\r\n            <p class=\"dessert__description\">${currencyFormat(item.price)} ${item.description}</p>\r\n            ${productButtonCart}\r\n        </div>`;\r\n\r\n    shopBakery.appendChild(product);\r\n\r\n    const productCartButton = product.querySelector(\".product_cart\");\r\n\r\n\r\n    productCartButton.addEventListener(\"click\", async (e) => {\r\n        e.preventDefault();\r\n\r\n        cart.push(item);\r\n        addProductToCart(cart);\r\n\r\n        if (userLogged) {\r\n            await createFirebaseCart(db, userLogged.uid, cart);\r\n        }\r\n\r\n        productCartButton.setAttribute(\"disabled\", true);\r\n        productCartButton.innerText = \"Producto añadido\";\r\n\r\n    });\r\n\r\n}\r\n\r\n\r\nfunction filterBy() {\r\n    const newCategory = categoryFilter.value;\r\n    const newOrder = orderFilter.value;\r\n    //const newVegan= veganFilter.value;\r\n\r\n    let filteredProducts = [];\r\n\r\n\r\n    if (newCategory !== \"\") {\r\n        filteredProducts = products.filter((product) => product.category === newCategory);\r\n    } else {\r\n        filteredProducts = products;\r\n    }\r\n\r\n    if (newOrder === \"asc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n\r\n    if (newOrder === \"desc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\r\n    }\r\n\r\n    shopBakery.innerHTML = \"\";\r\n    filteredProducts.forEach(product => {\r\n        renderProduct(product);\r\n    });\r\n}\r\n\r\ncategoryFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\norderFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\n\r\n/*\r\nfunction filterBy() {\r\n    const newCategory = categoryFilter.value;\r\n    const newOrder = orderFilter.value;\r\n    const newVeganism = veganFilter.value;\r\n    const newSugars = sugarFilter.value;\r\n\r\n    // let filteredCategory = [];\r\n    let filteredProducts = [];\r\n    //let filteredVegan = [];\r\n    // let filteredSugar = [];\r\n\r\n\r\n      if (newCategory !== \"\") {\r\n          filteredProducts = products.filter((product) => product.category === newCategory);\r\n      } else {\r\n          filteredProducts = products;\r\n      }\r\n\r\n\r\n      if (newCategory !== \"\") {\r\n        //Filter for category\r\n        filteredProducts = products.filter((product) => product.category === newCategory);\r\n\r\n        filteredProducts = products.filter((product) => product.vegano === newVeganism);\r\n\r\n        filteredProducts = products.filter((product) => product.azucar === newSugars);\r\n    } else {\r\n        filteredProducts = products;\r\n    }\r\n\r\n    if (newOrder === \"asc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\r\n    }\r\n\r\n    if (newOrder === \"desc\") {\r\n        filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\r\n    }\r\n    /*\r\n        if (newVeganism !== \"\") {\r\n            filteredProducts = products.filter((product) => product.vegano === newVeganism);\r\n        } else {\r\n            filteredProducts = products;\r\n        }\r\n      \r\n    \r\n        if (newSugars !== \"\") {\r\n            filteredProducts = products.filter((product) => product.azucar === newSugars);\r\n        } else {\r\n            filteredProducts = products;\r\n        }\r\n\r\n\r\n    shopBakery.innerHTML = \"\";\r\n    filteredProducts.forEach(product => {\r\n        renderProduct(product);\r\n    });\r\n}\r\n\r\ncategoryFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\norderFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\n /*\r\nveganFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n\r\nsugarFilter.addEventListener(\"change\", e => {\r\n    filterBy();\r\n});\r\n*/\r\n\r\n\r\n\r\n//if user is logged\r\nonAuthStateChanged(auth, async (user) => {\r\n    if (user) {\r\n\r\n        userLogged = user;\r\n        cart = await getFirebaseCart(db, userLogged.uid);\r\n\r\n    } else {\r\n        cart = getMyLocalCart();\r\n\r\n    }\r\n\r\n    loadProducts();\r\n\r\n});\r\n\r\n\r\n","import { collection, getDocs } from \"firebase/firestore\";\r\n\r\nasync function getProducts(db) {\r\n    const collectionRef = collection(db, \"products\");\r\n\r\n    try {\r\n        const { docs } = await getDocs(collectionRef);\r\n        const products = docs.map((doc) => {\r\n            console.log(doc);\r\n            return {\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            };\r\n        });\r\n\r\n        return products;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    getProducts\r\n}"],"names":["$4Bu0d","parcelRequire","$etBjH","$1011cc0b57ebed9a$var$shopBakery","document","getElementById","$1011cc0b57ebed9a$var$categoryFilter","$1011cc0b57ebed9a$var$orderFilter","$1011cc0b57ebed9a$var$userLogged","$1011cc0b57ebed9a$var$products","$1011cc0b57ebed9a$var$cart","async","$1011cc0b57ebed9a$var$loadProducts","firebaseProducts","db","collectionRef","collection","docs","getDocs","map","doc","console","log","data","id","e","$42e34d117df2caa3$export$68a801b7b3c0bfaa","innerHTML","forEach","product","$1011cc0b57ebed9a$var$renderProduct","item","createElement","className","setAttribute","coverImage","img","length","productButtonCart","some","productCart","name","$aDR0T","currencyFormat","price","description","appendChild","productCartButton","querySelector","addEventListener","preventDefault","push","addProductToCart","$6naOk","createFirebaseCart","uid","innerText","$1011cc0b57ebed9a$var$filterBy","newCategory","value","newOrder","filteredProducts","filter","category","sort","a","b"],"version":3,"file":"home.a14bb5c0.js.map"}